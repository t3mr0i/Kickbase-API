name: Generate API Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    
    - name: Install postman-to-openapi
      run: npm install -g postman-to-openapi
    
    - name: Create docs directory and files
      run: |
        mkdir -p docs
        touch docs/.nojekyll
    
    - name: Convert Postman to OpenAPI
      run: |
        p2o ./docs/Kickbase.postman_collection.json -f ./docs/openapi.yaml
        
    - name: Install yq for YAML processing
      run: |
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod a+x /usr/local/bin/yq
        
    - name: Add OpenAPI metadata
      run: |
        cat > docs/openapi.yaml << 'EOL'
        openapi: 3.0.0
        info:
          title: Kickbase API Documentation
          version: 1.0.0
          description: |
            # Kickbase API Documentation
            Unofficial documentation of the Kickbase API.
            
            ## Authentication
            Most endpoints require authentication via Bearer token.
            
            ### Required Headers
            ```
            User-Agent: Kickbase/12.0.0
            Content-Type: application/json
            Accept: application/json
            ```
          contact:
            name: Kai Detmers
            url: https://github.com/t3mr0i/Kickbase-API
        servers:
          - url: https://api.kickbase.com
            description: Production Server
        components:
          securitySchemes:
            bearerAuth:
              type: http
              scheme: bearer
          schemas:
            Error:
              type: object
              properties:
                code:
                  type: integer
                message:
                  type: string
          parameters:
            LeagueId:
              name: leagueId
              in: path
              required: true
              schema:
                type: string
            PlayerId:
              name: playerId
              in: path
              required: true
              schema:
                type: string
        security:
          - bearerAuth: []
        paths:
EOL

        # Add paths separately to avoid duplication
        cat >> docs/openapi.yaml << 'EOL'
          /v4/user/login:
            post:
              tags:
                - Authentication
              summary: Login
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        ext:
                          type: boolean
                        em:
                          type: string
                        loy:
                          type: boolean
                        pass:
                          type: string
                        rep:
                          type: object
              responses:
                '200':
                  description: Successful login
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          token:
                            type: string
EOL

    # Prepare documentation files - Fixed version
    - name: Prepare documentation files
      run: |
        # No need to copy files that are already in the docs directory
        # Just ensure all required files exist
        ls -la docs/
        echo "Files in docs directory:"
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: './docs'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

    # After the OpenAPI metadata step
    - name: Verify OpenAPI spec
      run: |
        echo "Checking OpenAPI spec file..."
        cat docs/openapi.yaml
        echo "OpenAPI spec location:"
        pwd
        ls -la docs/

    - name: Debug OpenAPI generation
      run: |
        echo "Current directory contents:"
        ls -la
        echo "\nDocs directory contents:"
        ls -la docs/
        echo "\nOpenAPI spec content:"
        cat docs/openapi.yaml
        echo "\nIndex.html content:"
        cat docs/index.html

    - name: Prepare Postman files
      run: |
        cp docs/Kickbase.postman_optimized.json docs/
name: Generate API Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    
    - name: Install postman-to-openapi
      run: npm install -g postman-to-openapi
    
    - name: Create docs directory and files
      run: |
        mkdir -p docs
        touch docs/.nojekyll
    
    - name: Convert Postman to OpenAPI
      run: |
        p2o ./docs/Kickbase.postman_collection.json -f ./docs/openapi.yaml
        
    - name: Install yq for YAML processing
      run: |
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod a+x /usr/local/bin/yq
        
    - name: Add OpenAPI metadata
      run: |
        cat > docs/openapi-header.yaml << 'EOL'
        openapi: 3.0.0
        info:
          title: Kickbase API Documentation
          description: |
            # Kickbase API Documentation
            Unofficial documentation of the Kickbase API. This documentation provides a comprehensive overview of available endpoints.
            
            ## Authentication
            Most endpoints require authentication. Use the login endpoint to obtain a token.

            ### Required Headers
            All requests must include:
            ```
            User-Agent: Kickbase/12.0.0
            Content-Type: application/json
            Accept: application/json
            ```

            For authenticated endpoints, also include:
            ```
            Authorization: Bearer <your-token>
            ```
            
            ### Example Login Request
            ```json
            POST https://api.kickbase.com/v4/user/login
            {
              "ext": true,
              "em": "your@mail.com",
              "loy": false,
              "pass": "yourpassword",
              "rep": {}
            }
            ```
            
            ## Rate Limiting
            Please be mindful of rate limits when making requests.
            
            ## Support
            This is an unofficial documentation. For official support, please contact Kickbase directly.
          version: 1.0.0
          contact:
            name: Kai Detmers
            url: https://github.com/t3mr0i/Kickbase-API
        servers:
          - url: https://api.kickbase.com
            description: Production Server
        components:
          securitySchemes:
            bearerAuth:
              type: http
              scheme: bearer
              bearerFormat: JWT
          headers:
            UserAgent:
              description: Required Kickbase User Agent
              required: true
              schema:
                type: string
                default: Kickbase/12.0.0
            Accept:
              description: Accept header
              required: true
              schema:
                type: string
                default: application/json
            ContentType:
              description: Content Type header
              required: true
              schema:
                type: string
                default: application/json
        security:
          - bearerAuth: []
        EOL
        
        yq eval 'del(.openapi) | del(.info) | del(.servers)' docs/openapi.yaml > docs/openapi-content.yaml
        cat docs/openapi-header.yaml docs/openapi-content.yaml > docs/openapi.yaml
        rm docs/openapi-header.yaml docs/openapi-content.yaml

    # Prepare documentation files - Fixed version
    - name: Prepare documentation files
      run: |
        # No need to copy files that are already in the docs directory
        # Just ensure all required files exist
        ls -la docs/
        echo "Files in docs directory:"
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: './docs'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

    # After the OpenAPI metadata step
    - name: Verify OpenAPI spec
      run: |
        echo "Checking OpenAPI spec file..."
        cat docs/openapi.yaml
        echo "OpenAPI spec location:"
        pwd
        ls -la docs/

    - name: Debug OpenAPI generation
      run: |
        echo "Current directory contents:"
        ls -la
        echo "\nDocs directory contents:"
        ls -la docs/
        echo "\nOpenAPI spec content:"
        cat docs/openapi.yaml
        echo "\nIndex.html content:"
        cat docs/index.html